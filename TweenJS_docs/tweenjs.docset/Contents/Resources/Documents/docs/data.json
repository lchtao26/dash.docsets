{
    "project": {
        "name": "TweenJS",
        "version": "1.0.0",
        "description": "TweenJS Docs",
        "url": "http://www.createjs.com/tweenjs",
        "logo": "assets/docs-icon-TweenJS.png"
    },
    "files": {
        "createjs/events/Event.js": {
            "name": "createjs/events/Event.js",
            "modules": {
                "CreateJS": 1
            },
            "classes": {
                "Event": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "createjs/events/EventDispatcher.js": {
            "name": "createjs/events/EventDispatcher.js",
            "modules": {},
            "classes": {
                "EventDispatcher": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "createjs/utils/Ticker.js": {
            "name": "createjs/utils/Ticker.js",
            "modules": {},
            "classes": {
                "Ticker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "createjs/utils/deprecate.js": {
            "name": "createjs/utils/deprecate.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "createjs/utils/extend.js": {
            "name": "createjs/utils/extend.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "createjs/utils/indexOf.js": {
            "name": "createjs/utils/indexOf.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "createjs/utils/promote.js": {
            "name": "createjs/utils/promote.js",
            "modules": {},
            "classes": {
                "Utility Methods": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/plugins/CSSPlugin.js": {
            "name": "tweenjs/plugins/CSSPlugin.js",
            "modules": {},
            "classes": {
                "CSSPlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/plugins/ColorPlugin.js": {
            "name": "tweenjs/plugins/ColorPlugin.js",
            "modules": {},
            "classes": {
                "ColorPlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/plugins/MotionGuidePlugin.js": {
            "name": "tweenjs/plugins/MotionGuidePlugin.js",
            "modules": {},
            "classes": {
                "MotionGuidePlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/plugins/RelativePlugin.js": {
            "name": "tweenjs/plugins/RelativePlugin.js",
            "modules": {},
            "classes": {
                "RelativePlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/plugins/RotationPlugin.js": {
            "name": "tweenjs/plugins/RotationPlugin.js",
            "modules": {},
            "classes": {
                "RotationPlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/plugins/SamplePlugin.js": {
            "name": "tweenjs/plugins/SamplePlugin.js",
            "modules": {},
            "classes": {
                "SamplePlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/AbstractTween.js": {
            "name": "tweenjs/AbstractTween.js",
            "modules": {
                "EaselJS": 1
            },
            "classes": {
                "AbstractTween": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/Ease.js": {
            "name": "tweenjs/Ease.js",
            "modules": {},
            "classes": {
                "Ease": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/Timeline.js": {
            "name": "tweenjs/Timeline.js",
            "modules": {},
            "classes": {
                "Timeline": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/Tween.js": {
            "name": "tweenjs/Tween.js",
            "modules": {
                "TweenJS": 1
            },
            "classes": {
                "Tween": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tweenjs/version.js": {
            "name": "tweenjs/version.js",
            "modules": {},
            "classes": {
                "TweenJS": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "CreateJS": {
            "name": "CreateJS",
            "submodules": {},
            "classes": {
                "Event": 1,
                "EventDispatcher": 1,
                "Ticker": 1,
                "Utility Methods": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "createjs/utils/promote.js",
            "line": 36,
            "description": "A collection of Classes that are shared across all the CreateJS libraries.  The classes are included in the minified\nfiles of each library and are available on the createjs namespace directly.\n\n<h4>Example</h4>\n\n     myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));",
            "itemtype": "main"
        },
        "TweenJS": {
            "name": "TweenJS",
            "submodules": {},
            "classes": {
                "CSSPlugin": 1,
                "ColorPlugin": 1,
                "MotionGuidePlugin": 1,
                "RelativePlugin": 1,
                "RotationPlugin": 1,
                "SamplePlugin": 1,
                "Ease": 1,
                "Timeline": 1,
                "Tween": 1,
                "TweenJS": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "tweenjs/version.js",
            "line": 9,
            "description": "The TweenJS Javascript library provides a simple but powerful tweening interface. It supports tweening of both\nnumeric object properties & CSS style properties, and allows you to chain tweens and actions together to create\ncomplex sequences.\n\n<h4>Simple Tween</h4>\nThis tween will tween the target's alpha property from 0 to 1 for 1000ms (1 second) then call the <code>handleComplete</code> function.\n\n\t    target.alpha = 0;\n\t    createjs.Tween.get(target).to({alpha:1}, 1000).call(handleComplete);\n\t    function handleComplete() {\n\t    \t//Tween complete\n\t    }\n\n<strong>Arguments and Scope</strong>\nTween also supports a `call()` with arguments and/or a scope. If no scope is passed, then the function is called\nanonymously (normal JavaScript behaviour). The scope is useful for maintaining scope when doing object-oriented\nstyle development.\n\n     createjs.Tween.get(target).to({alpha:0})\n         .call(handleComplete, [argument1, argument2], this);\n\n<h4>Chainable Tween</h4>\nThis tween will wait 0.5s, tween the target's alpha property to 0 over 1s, set it's visible to false, then call the\n<code>handleComplete</code> function.\n\n\t    target.alpha = 1;\n\t    createjs.Tween.get(target).wait(500).to({alpha:0, visible:false}, 1000).call(handleComplete);\n\t    function handleComplete() {\n\t    \t//Tween complete\n\t    }\n\n<h4>Browser Support</h4>\nTweenJS will work in all browsers.",
            "itemtype": "main"
        },
        "EaselJS": {
            "name": "EaselJS",
            "submodules": {},
            "classes": {
                "AbstractTween": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "tweenjs/AbstractTween.js",
            "line": 41
        }
    },
    "classes": {
        "Event": {
            "name": "Event",
            "shortname": "Event",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CreateJS",
            "namespace": "",
            "file": "createjs/events/Event.js",
            "line": 48,
            "description": "Contains properties and methods shared by all events for use with\n{{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n\nNote that Event objects are often reused, so you should never\nrely on an event object's state outside of the call stack it was received in.",
            "params": [
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether the event will bubble through the display list.",
                    "type": "Boolean"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the default behaviour of this event can be cancelled.",
                    "type": "Boolean"
                }
            ],
            "is_constructor": 1
        },
        "EventDispatcher": {
            "name": "EventDispatcher",
            "shortname": "EventDispatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Ticker"
            ],
            "module": "CreateJS",
            "namespace": "",
            "file": "createjs/events/EventDispatcher.js",
            "line": 41,
            "description": "EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n\nYou can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\nEventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\n\nTogether with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\nDOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\nbubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n\nEventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\nto create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \n{{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\n{{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\n\nAnother addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\nmethod, which can be used to listeners for all events, or listeners for a specific event. The Event object also \nincludes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\n\n<h4>Example</h4>\nAdd EventDispatcher capabilities to the \"MyClass\" class.\n\n     EventDispatcher.initialize(MyClass.prototype);\n\nAdd an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\n\n     instance.addEventListener(\"eventName\", handlerMethod);\n     function handlerMethod(event) {\n         console.log(event.target + \" Was Clicked\");\n     }\n\n<b>Maintaining proper scope</b><br />\nScope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\nmethod to subscribe to events simplifies this.\n\n     instance.addEventListener(\"click\", function(event) {\n         console.log(instance == this); // false, scope is ambiguous.\n     });\n     \n     instance.on(\"click\", function(event) {\n         console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\n     });\n\nIf you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\nscope.\n\n<b>Browser support</b>\nThe event model in CreateJS can be used separately from the suite in any project, however the inheritance model\nrequires modern browsers (IE9+).",
            "is_constructor": 1
        },
        "Ticker": {
            "name": "Ticker",
            "shortname": "Ticker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CreateJS",
            "namespace": "",
            "file": "createjs/utils/Ticker.js",
            "line": 41,
            "description": "The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\nevent to be notified when a set time interval has elapsed.\n\nNote that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\nwhen under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\ncan not be instantiated.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         // Actions carried out each tick (aka frame)\n         if (!event.paused) {\n             // Actions carried out when the Ticker is not paused.\n         }\n     }",
            "uses": [
                "EventDispatcher"
            ],
            "static": 1
        },
        "Utility Methods": {
            "name": "Utility Methods",
            "shortname": "Utility Methods",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CreateJS",
            "namespace": "",
            "file": "createjs/utils/promote.js",
            "line": 36
        },
        "CSSPlugin": {
            "name": "CSSPlugin",
            "shortname": "CSSPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TweenJS",
            "namespace": "",
            "file": "tweenjs/plugins/CSSPlugin.js",
            "line": 38,
            "description": "A TweenJS plugin for working with numeric CSS string properties (ex. top, left). To use simply install after\nTweenJS has loaded:\n\n\tcreatejs.CSSPlugin.install();\n\nCSSPlugin works with almost any style property or unit. It identifies CSS values by looking for an initial value\non the element's `style` object. It also uses this initial value to parse out the units to use with that value.\n\nIn the following example, `top` would be tweened as a style using `em` units using CSSPlugin, but `width` \nwould be not be tweened as a style (because there is no initial inline style value for it).\n\n\tmyEl.style.top = \"10em\";\n\tcreatejs.Tween.get(myEl).to({top:20, width:100}, 1000);\n\nCSSPlugin can also use computed styles. Please see {{#crossLink \"AbstractTween/compute:property\"}}{{/crossLink}}\nfor more information.\n\nCSSPlugin has specific handling for the `transform` style, and will tween any transforms as long as their operations\nand units match. For example:\n\n\tmyEl.style.transform = \"translate(20px, 30px)\";\n\tcreatejs.Tween.get(myEl)\n\t\t.to({transform: \"translate(40px, 50px)\"}, 900) // would be tweened, everything matches\n\t\t.to({transform: \"translate(5em, 300px)\"}, 900) // would NOT be tweened, different units (px vs em)\n\t\t.to({transform: \"scaleX(2)\"}, 900) // would NOT be tweened, different operations (translate vs rotate)\n\nYou can also use `*` to copy the operation at that position from the previous transform.\n\n\tmyEl.style.transform = \"translate(0px, 0px) rotate(0deg)\";\n\tcreatejs.Tween.get(myEl)\n\t\t.to({transform: \"translate(50px, 50px) *\"}, 900) // would copy the \"rotate\" operation\n\t\t.to({transform: \"* rotate(90deg)\"}, 900) // would copy the \"translate\" operation\n\nPlease note that the CSS Plugin is not included in the TweenJS minified file.",
            "is_constructor": 1
        },
        "ColorPlugin": {
            "name": "ColorPlugin",
            "shortname": "ColorPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TweenJS",
            "namespace": "",
            "file": "tweenjs/plugins/ColorPlugin.js",
            "line": 38,
            "description": "The ColorPlugin enables tweening of almost any CSS color values. This includes 3 or 6 digit hex colors (`#00FF00`),\nrgb, rgba, hsl, and hsla colors (but not named colors, such as `red`).\n\nIt can operate in either `rgb` or `hsl` mode. It will convert all colors into that mode, and output them accordingly.",
            "is_constructor": 1
        },
        "MotionGuidePlugin": {
            "name": "MotionGuidePlugin",
            "shortname": "MotionGuidePlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TweenJS",
            "namespace": "",
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 39,
            "description": "A TweenJS plugin for working with motion guides. Defined paths which objects can follow or orient along.\n\nTo use the plugin, install the plugin after TweenJS has loaded. To define a path, add\n\n\t\tcreatejs.MotionGuidePlugin.install();\n\n<h4>Example</h4>\n\n\t\t// Using a Motion Guide\n\t\tcreatejs.Tween.get(target).to({guide:{ path:[0,0, 0,200,200,200, 200,0,0,0] }},7000);\n\t\t// Visualizing the line\n\t\tgraphics.moveTo(0,0).curveTo(0,200,200,200).curveTo(200,0,0,0);\n\nEach path needs pre-computation to ensure there's fast performance. Because of the pre-computation there's no\nbuilt in support for path changes mid tween. These are the Guide Object's properties:<UL>\n\t\t<LI> path: Required, Array : The x/y points used to draw the path with a moveTo and 1 to n curveTo calls.</LI>\n\t\t<LI> start: Optional, 0-1 : Initial position, default 0 except for when continuing along the same path.</LI>\n\t\t<LI> end: Optional, 0-1 : Final position, default 1 if not specified.</LI>\n\t\t<LI> orient: Optional, string : \"fixed\"/\"auto\"/\"cw\"/\"ccw\"<UL>\n\t\t\t\t<LI>\"fixed\" forces the object to face down the path all movement (relative to start rotation),</LI>\n\t\t\t\t<LI>\"auto\" rotates the object along the path relative to the line.</LI>\n\t\t\t\t<LI>\"cw\"/\"ccw\" force clockwise or counter clockwise rotations including Adobe Flash/Animate-like\n\t\t\t\tbehaviour. This may override your end rotation value.</LI>\n\t\t</UL></LI>\n</UL>\nGuide objects should not be shared between tweens even if all properties are identical, the library stores\ninformation on these objects in the background and sharing them can cause unexpected behaviour. Values\noutside 0-1 range of tweens will be a \"best guess\" from the appropriate part of the defined curve.",
            "is_constructor": 1
        },
        "RelativePlugin": {
            "name": "RelativePlugin",
            "shortname": "RelativePlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TweenJS",
            "namespace": "",
            "file": "tweenjs/plugins/RelativePlugin.js",
            "line": 38,
            "description": "The RelativePlugin for TweenJS enables relative numeric values for tweens. Install using:\n\n\tRotationPlugin.install();\n\nOnce installed, you can pass in relative numeric property values as strings beginning with \"+\" or \"-\". For example,\nthe following tween would tween the x position of `foo` from its initial value of `200` to `50` (200-150), then to\n`125` (50+75).\n\n\tfoo.x = 200;\n\tTween.get(foo).to({x:\"-150\"}, 500).to({x:\"+75\"}, 500);",
            "is_constructor": 1
        },
        "RotationPlugin": {
            "name": "RotationPlugin",
            "shortname": "RotationPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TweenJS",
            "namespace": "",
            "file": "tweenjs/plugins/RotationPlugin.js",
            "line": 38,
            "description": "The RotationPlugin for TweenJS modifies tweens of rotation properties. These properties can be changed when calling\n`install`. Install using:\n\n\tRotationPlugin.install(props);\n\nAfter installation, by default all rotation tweens will rotate in the shortest direction. For example, if you\ntween from `rotation=15` to `rotation=330`, it will rotate counter-clockwise 45 degrees. You can modify this behaviour by\nspecifying a `rotationDir` tween value. A value of `-1` will force CCW rotation, `1` will force CW, and `0` will\ndisable the plugin effects for that portion of the tween.\n\nNote that the `rotationDir` value will persist until overridden in future `to` calls. Set it to null to re-enable the default behavior.\n\n\t// this tween will rotate: CCW, then CCW (because rotationDir persists), then CW.\n\tmyTween.get(foo).to({rotation:30, rotationDir:-1}).to({rotation:60}).to({rotation:10, rotationDir:1});\n\nYou can also disable the plugin completely for a tween by setting `tween.pluginData.Rotation_disabled=true`.",
            "static": 1
        },
        "SamplePlugin": {
            "name": "SamplePlugin",
            "shortname": "SamplePlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TweenJS",
            "namespace": "",
            "file": "tweenjs/plugins/SamplePlugin.js",
            "line": 39,
            "description": "A sample TweenJS plugin. This plugin is purely for demonstration, and contains documentation and helpful tips on\nbuilding plugins.\n\nIt sets the y position of the target based on a sinusoidal function of its x position.\n\nNOTE: The code for this class is heavily commented. Please look at it if you'd like to write a plugin.\n\nA TweenJS plugin is simply an object that exposes two properties (id, priority), and three methods (init, step, and change).\nGenerally a plugin will also expose an <code>install</code> method as well, though this is not strictly necessary.",
            "is_constructor": 1
        },
        "AbstractTween": {
            "name": "AbstractTween",
            "shortname": "AbstractTween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "tweenjs/AbstractTween.js",
            "line": 41,
            "description": "Base class that both {{#crossLink \"Tween\"}}{{/crossLink}} and {{#crossLink \"Timeline\"}}{{/crossLink}} extend. Should not be instantiated directly.",
            "params": [
                {
                    "name": "props",
                    "description": "The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\nSupported props are listed below. These props are set on the corresponding instance properties except where\nspecified.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "useTicks",
                            "description": "See the {{#crossLink \"AbstractTween/useTicks:property\"}}{{/crossLink}} property for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "ignoreGlobalPause",
                            "description": "See the {{#crossLink \"AbstractTween/ignoreGlobalPause:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "loop",
                            "description": "See the {{#crossLink \"AbstractTween/loop:property\"}}{{/crossLink}} for more information.",
                            "type": "Number|boolean",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "reversed",
                            "description": "See the {{#crossLink \"AbstractTween/reversed:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "bounce",
                            "description": "See the {{#crossLink \"AbstractTween/bounce:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "timeScale",
                            "description": "See the {{#crossLink \"AbstractTween/timeScale:property\"}}{{/crossLink}} for more information.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "onChange",
                            "description": "Adds the specified function as a listener to the {{#crossLink \"AbstractTween/change:event\"}}{{/crossLink}} event",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onComplete",
                            "description": "Adds the specified function as a listener to the {{#crossLink \"AbstractTween/complete:event\"}}{{/crossLink}} event",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "EventDispatcher",
            "is_constructor": 1
        },
        "Ease": {
            "name": "Ease",
            "shortname": "Ease",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TweenJS",
            "namespace": "",
            "file": "tweenjs/Ease.js",
            "line": 39,
            "description": "The Ease class provides a collection of easing functions for use with TweenJS. It does not use the standard 4 param\neasing signature. Instead it uses a single param which indicates the current linear ratio (0 to 1) of the tween.\n\nMost methods on Ease can be passed directly as easing functions:\n\n     Tween.get(target).to({x:100}, 500, Ease.linear);\n\nHowever, methods beginning with \"get\" will return an easing function based on parameter values:\n\n     Tween.get(target).to({y:200}, 500, Ease.getPowIn(2.2));\n\nPlease see the <a href=\"http://www.createjs.com/Demos/TweenJS/Tween_SparkTable\">spark table demo</a> for an\noverview of the different ease types on <a href=\"http://tweenjs.com\">TweenJS.com</a>.\n\n<em>Equations derived from work by Robert Penner.</em>",
            "static": 1
        },
        "Timeline": {
            "name": "Timeline",
            "shortname": "Timeline",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TweenJS",
            "namespace": "",
            "file": "tweenjs/Timeline.js",
            "line": 42,
            "description": "The Timeline class synchronizes multiple tweens and allows them to be controlled as a group. Please note that if a\ntimeline is looping, the tweens on it may appear to loop even if the \"loop\" property of the tween is false.\n\nNOTE: Timeline currently also accepts a param list in the form: `tweens, labels, props`. This is for backwards\ncompatibility only and will be removed in the future. Include tweens and labels as properties on the props object.",
            "params": [
                {
                    "name": "props",
                    "description": "The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\nSupported props are listed below. These props are set on the corresponding instance properties except where\nspecified.<UL>\n   <LI> `useTicks`</LI>\n   <LI> `ignoreGlobalPause`</LI>\n   <LI> `loop`</LI>\n   <LI> `reversed`</LI>\n   <LI> `bounce`</LI>\n   <LI> `timeScale`</LI>\n   <LI> `paused`</LI>\n   <LI> `position`: indicates the initial position for this tween.</LI>\n   <LI> `onChange`: adds the specified function as a listener to the `change` event</LI>\n   <LI> `onComplete`: adds the specified function as a listener to the `complete` event</LI>\n</UL>",
                    "type": "Object",
                    "optional": true
                }
            ],
            "extends": "AbstractTween",
            "is_constructor": 1
        },
        "Tween": {
            "name": "Tween",
            "shortname": "Tween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TweenJS",
            "namespace": "",
            "file": "tweenjs/Tween.js",
            "line": 76,
            "description": "Tweens properties for a single target. Methods can be chained to create complex animation sequences:\n\n<h4>Example</h4>\n\n\tcreatejs.Tween.get(target)\n\t\t.wait(500)\n\t\t.to({alpha:0, visible:false}, 1000)\n\t\t.call(handleComplete);\n\nMultiple tweens can share a target, however if they affect the same properties there could be unexpected\nbehaviour. To stop all tweens on an object, use {{#crossLink \"Tween/removeTweens\"}}{{/crossLink}} or pass `override:true`\nin the props argument.\n\n\tcreatejs.Tween.get(target, {override:true}).to({x:100});\n\nSubscribe to the {{#crossLink \"Tween/change:event\"}}{{/crossLink}} event to be notified when the tween position changes.\n\n\tcreatejs.Tween.get(target, {override:true}).to({x:100}).addEventListener(\"change\", handleChange);\n\tfunction handleChange(event) {\n\t\t// The tween changed.\n\t}\n\nSee the {{#crossLink \"Tween/get\"}}{{/crossLink}} method also.",
            "params": [
                {
                    "name": "target",
                    "description": "The target object that will have its properties tweened.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\nSupported props are listed below. These props are set on the corresponding instance properties except where\nspecified.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "useTicks",
                            "description": "See the {{#crossLink \"AbstractTween/useTicks:property\"}}{{/crossLink}} property for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "ignoreGlobalPause",
                            "description": "See the {{#crossLink \"AbstractTween/ignoreGlobalPause:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "loop",
                            "description": "See the {{#crossLink \"AbstractTween/loop:property\"}}{{/crossLink}} for more information.",
                            "type": "Number|boolean",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "reversed",
                            "description": "See the {{#crossLink \"AbstractTween/reversed:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "bounce",
                            "description": "See the {{#crossLink \"AbstractTween/bounce:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "timeScale",
                            "description": "See the {{#crossLink \"AbstractTween/timeScale:property\"}}{{/crossLink}} for more information.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "pluginData",
                            "description": "See the {{#crossLink \"Tween/pluginData:property\"}}{{/crossLink}} for more information.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "paused",
                            "description": "See the {{#crossLink \"AbstractTween/paused:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "position",
                            "description": "The initial position for this tween. See {{#crossLink \"AbstractTween/position:property\"}}{{/crossLink}}",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "onChange",
                            "description": "Adds the specified function as a listener to the {{#crossLink \"AbstractTween/change:event\"}}{{/crossLink}} event",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onComplete",
                            "description": "Adds the specified function as a listener to the {{#crossLink \"AbstractTween/complete:event\"}}{{/crossLink}} event",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "override",
                            "description": "Removes all existing tweens for the target when set to `true`.\n</UL>",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "extends": "AbstractTween",
            "is_constructor": 1
        },
        "TweenJS": {
            "name": "TweenJS",
            "shortname": "TweenJS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TweenJS",
            "namespace": "",
            "file": "tweenjs/version.js",
            "line": 9,
            "description": "Static class holding library specific information such as the version and buildDate of\nthe library."
        }
    },
    "classitems": [
        {
            "file": "createjs/events/Event.js",
            "line": 64,
            "description": "The type of event.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 71,
            "description": "The object that generated an event.",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 80,
            "description": "The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\nalways be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\nis generated from childObj, then a listener on parentObj would receive the event with\ntarget=childObj (the original target) and currentTarget=parentObj (where the listener was added).",
            "itemtype": "property",
            "name": "currentTarget",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 92,
            "description": "For bubbling events, this indicates the current event phase:<OL>\n\t<LI> capture phase: starting from the top parent to the target</LI>\n\t<LI> at target phase: currently being dispatched from the target</LI>\n\t<LI> bubbling phase: from the target to the top parent</LI>\n</OL>",
            "itemtype": "property",
            "name": "eventPhase",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 105,
            "description": "Indicates whether the event will bubble through the display list.",
            "itemtype": "property",
            "name": "bubbles",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 114,
            "description": "Indicates whether the default behaviour of this event can be cancelled via\n{{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.",
            "itemtype": "property",
            "name": "cancelable",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 124,
            "description": "The epoch time at which this event was created.",
            "itemtype": "property",
            "name": "timeStamp",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 133,
            "description": "Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "defaultPrevented",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 143,
            "description": "Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n{{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "propagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 153,
            "description": "Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "immediatePropagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 163,
            "description": "Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "removed",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 175,
            "description": "Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\nMirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\ncancel the default behaviour associated with the event.",
            "itemtype": "method",
            "name": "preventDefault",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 185,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 194,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n{{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 204,
            "description": "Causes the active listener to be removed via removeEventListener();\n\n\t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t\t\t// do stuff...\n\t\t\tevt.remove(); // removes this listener.\n\t\t});",
            "itemtype": "method",
            "name": "remove",
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 218,
            "description": "Returns a clone of the Event instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "Event"
            },
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 227,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "Event"
            },
            "chainable": 1,
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/Event.js",
            "line": 240,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Event",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 99,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 106,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_captureListeners",
            "type": "Object",
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 116,
            "description": "Static initializer to mix EventDispatcher methods into a target object or prototype.\n\n\t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t\tEventDispatcher.initialize(myObject); // add to a specific instance",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to inject EventDispatcher methods into. This can be an instance or a\nprototype.",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 140,
            "description": "Adds the specified event listener. Note that adding multiple listeners to the same function will result in\nmultiple callbacks getting fired.\n\n<h4>Example</h4>\n\n     displayObject.addEventListener(\"click\", handleClick);\n     function handleClick(event) {\n        // Click happened.\n     }",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the listener for chaining or assignment.",
                "type": "Function | Object"
            },
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 173,
            "description": "A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\nonly run once, associate arbitrary data with the listener, and remove the listener.\n\nThis method works by creating an anonymous wrapper function and subscribing it with addEventListener.\nThe wrapper function is returned for use with `removeEventListener` (or `off`).\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n{{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\nto `on` with the same params will create multiple listeners.\n\n<h4>Example</h4>\n\n\t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t\tfunction handleClick(evt, data) {\n\t\t\tdata.count -= 1;\n\t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t\t\tif (data.count == 0) {\n\t\t\t\talert(\"clicked 3 times!\");\n\t\t\t\tmyBtn.off(\"click\", listener);\n\t\t\t\t// alternately: evt.remove();\n\t\t\t}\n\t\t}",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "scope",
                    "description": "The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "once",
                    "description": "If true, the listener will remove itself after the first time it is triggered.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Arbitrary data that will be included as the second parameter when the listener is called.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.",
                "type": "Function"
            },
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 219,
            "description": "Removes the specified event listener.\n\n<b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\nfunction, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\nclosure will not work.\n\n<h4>Example</h4>\n\n     displayObject.removeEventListener(\"click\", handleClick);",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 249,
            "description": "A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n.on method.\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n{{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 263,
            "description": "Removes all listeners for the specified type, or all listeners of all types.\n\n<h4>Example</h4>\n\n     // Remove all listeners\n     displayObject.removeAllEventListeners();\n\n     // Remove all click listeners\n     displayObject.removeAllEventListeners(\"click\");",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event. If omitted, all listeners for all types will be removed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 285,
            "description": "Dispatches the specified event to all listeners.\n\n<h4>Example</h4>\n\n     // Use a string event\n     this.dispatchEvent(\"complete\");\n\n     // Use an Event instance\n     var event = new createjs.Event(\"progress\");\n     this.dispatchEvent(event);",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "An object with a \"type\" property, or a string type.\nWhile a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\ndispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\nbe used to avoid event object instantiation for non-bubbling events that may not have any listeners.",
                    "type": "Object | String | Event"
                },
                {
                    "name": "bubbles",
                    "description": "Specifies the `bubbles` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cancelable",
                    "description": "Specifies the `cancelable` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns false if `preventDefault()` was called on a cancelable event, true otherwise.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 339,
            "description": "Indicates whether there is at least one listener for the specified event type.",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 350,
            "description": "Indicates whether there is at least one listener for the specified event type on this object or any of its\nancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\nspecified type is dispatched from this object, it will trigger at least one listener.\n\nThis is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\nevent flow for a listener, not just this object.",
            "itemtype": "method",
            "name": "willTrigger",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 370,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/events/EventDispatcher.js",
            "line": 380,
            "itemtype": "method",
            "name": "_dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "",
                    "type": "Object | Event"
                },
                {
                    "name": "eventPhase",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 69,
            "description": "In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\nuses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\ndispatches the tick when the time is within a certain threshold.\n\nThis mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\nbut does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\ngaining the benefits of that API (screen synch, background throttling).\n\nVariance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\nframerates of 10, 12, 15, 20, and 30 work well.\n\nFalls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\nsupported.",
            "itemtype": "property",
            "name": "RAF_SYNCHED",
            "static": 1,
            "type": "{String}",
            "default": "\"synched\"",
            "readonly": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 91,
            "description": "In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\nBecause requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\nYou can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent object's \"delta\" properties to make this easier.\n\nFalls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\nsupported.",
            "itemtype": "property",
            "name": "RAF",
            "static": 1,
            "type": "{String}",
            "default": "\"raf\"",
            "readonly": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 107,
            "description": "In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\nprovide the benefits of requestAnimationFrame (screen synch, background throttling).",
            "itemtype": "property",
            "name": "TIMEOUT",
            "static": 1,
            "type": "{String}",
            "default": "\"timeout\"",
            "readonly": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 120,
            "description": "Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n{{#crossLink \"Ticker/paused:property\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         console.log(\"Paused:\", event.paused, event.delta);\n     }",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "paused",
                    "description": "Indicates whether the ticker is currently paused.",
                    "type": "Boolean"
                },
                {
                    "name": "delta",
                    "description": "The time elapsed in ms since the last tick.",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "The total time in ms since Ticker was initialized.",
                    "type": "Number"
                },
                {
                    "name": "runTime",
                    "description": "The total time in ms that Ticker was not paused since it was initialized. For example,\n\tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 144,
            "description": "Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n{{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}}, and\n{{#crossLink \"Ticker/RAF_SYNCHED:property\"}}{{/crossLink}} for mode details.",
            "itemtype": "property",
            "name": "timingMode",
            "static": 1,
            "type": "{String}",
            "default": "Ticker.TIMEOUT",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 155,
            "description": "Specifies a maximum value for the delta property in the tick event object. This is useful when building time\nbased animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\nalert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n(ex. maxDelta=50 when running at 40fps).\n\nThis does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\nwhen using both delta and other values.\n\nIf 0, there is no maximum.",
            "itemtype": "property",
            "name": "maxDelta",
            "static": 1,
            "type": "{number}",
            "default": "0",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 172,
            "description": "When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\nof the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n{{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\ninfo.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     createjs.Ticker.paused = true;\n     function handleTick(event) {\n         console.log(event.paused,\n         \tcreatejs.Ticker.getTime(false),\n         \tcreatejs.Ticker.getTime(true));\n     }",
            "itemtype": "property",
            "name": "paused",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 212,
            "itemtype": "property",
            "name": "_inited",
            "static": 1,
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 220,
            "itemtype": "property",
            "name": "_startTime",
            "static": 1,
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 228,
            "itemtype": "property",
            "name": "_pausedTime",
            "static": 1,
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 236,
            "description": "The number of ticks that have passed",
            "itemtype": "property",
            "name": "_ticks",
            "static": 1,
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 245,
            "description": "The number of ticks that have passed while Ticker has been paused",
            "itemtype": "property",
            "name": "_pausedTicks",
            "static": 1,
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 254,
            "itemtype": "property",
            "name": "_interval",
            "static": 1,
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 262,
            "itemtype": "property",
            "name": "_lastTime",
            "static": 1,
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 270,
            "itemtype": "property",
            "name": "_times",
            "static": 1,
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 278,
            "itemtype": "property",
            "name": "_tickTimes",
            "static": 1,
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 286,
            "description": "Stores the timeout or requestAnimationFrame id.",
            "itemtype": "property",
            "name": "_timerId",
            "static": 1,
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 295,
            "description": "True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\nif that property changed and a tick hasn't fired.",
            "itemtype": "property",
            "name": "_raf",
            "static": 1,
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 307,
            "description": "Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "_setInterval",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "interval",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 322,
            "description": "Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "_getInterval",
            "access": "private",
            "tagname": "",
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 335,
            "description": "Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "_setFPS",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 348,
            "description": "Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "_getFPS",
            "static": 1,
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 361,
            "description": "Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\nNote that actual time between ticks may be more than specified depending on CPU load.\nThis property is ignored if the ticker is using the `RAF` timing mode.",
            "itemtype": "property",
            "name": "interval",
            "static": 1,
            "type": "{Number}",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 370,
            "description": "Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n`framerate == 1000/interval`.",
            "itemtype": "property",
            "name": "framerate",
            "static": 1,
            "type": "{Number}",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 386,
            "description": "Starts the tick. This is called automatically when the first listener is added.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 401,
            "description": "Stops the Ticker and removes all listeners. Use init() to restart the Ticker.",
            "itemtype": "method",
            "name": "reset",
            "static": 1,
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 419,
            "description": "Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\nbecause it only measures the time spent within the tick execution stack. \n\nExample 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \nthe end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \nthere may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\nExample 2: With a target FPS of 30, {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} returns 10fps, which\nindicates an average of 100ms between the end of one tick and the end of the next. However, {{#crossLink \"Ticker/getMeasuredTickTime\"}}{{/crossLink}}\nreturns 20ms. This would indicate that something other than the tick is using ~80ms (another script, DOM\nrendering, etc).",
            "itemtype": "method",
            "name": "getMeasuredTickTime",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "The number of previous ticks over which to measure the average time spent in a tick.\nDefaults to the number of ticks per second. To get only the last tick's time, pass in 1.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The average time spent in a tick in milliseconds.",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 447,
            "description": "Returns the actual frames / ticks per second.",
            "itemtype": "method",
            "name": "getMeasuredFPS",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "The number of previous ticks over which to measure the actual frames / ticks per second.\nDefaults to the number of ticks per second.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The actual frames / ticks per second. Depending on performance, this may differ\nfrom the target frames per second.",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 465,
            "description": "Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\nReturns -1 if Ticker has not been initialized. For example, you could use\nthis in a time synchronized animation to determine the exact amount of time that has elapsed.",
            "itemtype": "method",
            "name": "getTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "If true only time elapsed while Ticker was not paused will be returned.\nIf false, the value returned will be total time elapsed since the first tick event listener was added.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Number of milliseconds that have elapsed since Ticker was initialized or -1.",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 479,
            "description": "Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent object.",
            "itemtype": "method",
            "name": "getEventTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "[runTime=false] If true, the runTime property will be returned instead of time.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The time or runTime property from the most recent tick event or -1.",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 491,
            "description": "Returns the number of ticks that have been broadcast by Ticker.",
            "itemtype": "method",
            "name": "getTicks",
            "static": 1,
            "params": [
                {
                    "name": "pauseable",
                    "description": "Indicates whether to include ticks that would have been broadcast\nwhile Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\nIf false, tick events that would have been broadcast while Ticker was paused will be included in the return\nvalue. The default value is false.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "of ticks that have been broadcast.",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 507,
            "itemtype": "method",
            "name": "_handleSynch",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 522,
            "itemtype": "method",
            "name": "_handleRAF",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 533,
            "itemtype": "method",
            "name": "_handleTimeout",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 544,
            "itemtype": "method",
            "name": "_setupTick",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 565,
            "itemtype": "method",
            "name": "_tick",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/Ticker.js",
            "line": 599,
            "itemtype": "method",
            "name": "_getTime",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Ticker",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/deprecate.js",
            "line": 40,
            "description": "Wraps deprecated methods so they still be used, but throw warnings to developers.\n\n\tobj.deprecatedMethod = createjs.deprecate(\"Old Method Name\", obj._fallbackMethod);\n\nThe recommended approach for deprecated properties is:\n\n\ttry {\n\t\tObj\tect.defineProperties(object, {\n\t\t\treadyOnlyProp: { get: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }) },\n\t\t\treadWriteProp: {\n\t\t\t\tget: createjs.deprecate(\"readOnlyProp\", function() { return this.alternateProp; }),\n\t\t\t\tset: createjs.deprecate(\"readOnlyProp\", function(val) { this.alternateProp = val; })\n\t\t});\n\t} catch (e) {}",
            "itemtype": "method",
            "name": "deprecate",
            "params": [
                {
                    "name": "fallbackMethod",
                    "description": "A method to call when the deprecated method is used. See the example for how",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "name",
                    "description": "The name of the method or property to display in the console warning.\nto deprecate properties.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "If a fallbackMethod is supplied, returns a closure that will call the fallback method after\nlogging the warning in the console.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/extend.js",
            "line": 40,
            "description": "Sets up the prototype chain and constructor property for a new class.\n\nThis should be called right after creating the class constructor.\n\n\tfunction MySubClass() {}\n\tcreatejs.extend(MySubClass, MySuperClass);\n\tMySubClass.prototype.doSomething = function() { }\n\n\tvar foo = new MySubClass();\n\tconsole.log(foo instanceof MySuperClass); // true\n\tconsole.log(foo.prototype.constructor === MySubClass); // true",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subclass",
                    "description": "The subclass.",
                    "type": "Function"
                },
                {
                    "name": "superclass",
                    "description": "The superclass to extend.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the subclass's new prototype.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/indexOf.js",
            "line": 40,
            "description": "Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\nthat value.  Returns -1 if value is not found.\n\n     var i = createjs.indexOf(myArray, myElementToFind);",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "array",
                    "description": "Array to search for searchElement",
                    "type": "Array"
                },
                {
                    "name": "searchElement",
                    "description": "Element to find in array."
                }
            ],
            "return": {
                "description": "The first index of searchElement in array.",
                "type": "Number"
            },
            "class": "Utility Methods",
            "module": "CreateJS"
        },
        {
            "file": "createjs/utils/promote.js",
            "line": 40,
            "description": "Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\nIt is recommended to use the super class's name as the prefix.\nAn alias to the super class's constructor is always added in the format `prefix_constructor`.\nThis allows the subclass to call super class methods without using `function.call`, providing better performance.\n\nFor example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\nwould add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\nprototype of `MySubClass` as `MySuperClass_draw`.\n\nThis should be called after the class's prototype is fully defined.\n\n\tfunction ClassA(name) {\n\t\tthis.name = name;\n\t}\n\tClassA.prototype.greet = function() {\n\t\treturn \"Hello \"+this.name;\n\t}\n\n\tfunction ClassB(name, punctuation) {\n\t\tthis.ClassA_constructor(name);\n\t\tthis.punctuation = punctuation;\n\t}\n\tcreatejs.extend(ClassB, ClassA);\n\tClassB.prototype.greet = function() {\n\t\treturn this.ClassA_greet()+this.punctuation;\n\t}\n\tcreatejs.promote(ClassB, \"ClassA\");\n\n\tvar foo = new ClassB(\"World\", \"!?!\");\n\tconsole.log(foo.greet()); // Hello World!?!",
            "itemtype": "method",
            "name": "promote",
            "params": [
                {
                    "name": "subclass",
                    "description": "The class to promote super class methods on.",
                    "type": "Function"
                },
                {
                    "name": "prefix",
                    "description": "The prefix to add to the promoted method names. Usually the name of the superclass.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the subclass.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "module": "CreateJS"
        },
        {
            "file": "tweenjs/plugins/CSSPlugin.js",
            "line": 82,
            "itemtype": "property",
            "name": "priority",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "CSSPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/CSSPlugin.js",
            "line": 89,
            "description": "READ-ONLY. A unique identifying string for this plugin. Used by TweenJS to ensure duplicate plugins are not installed on a tween.",
            "itemtype": "property",
            "name": "ID",
            "type": "{String}",
            "static": 1,
            "readonly": "",
            "class": "CSSPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/CSSPlugin.js",
            "line": 98,
            "description": "READ-ONLY.",
            "itemtype": "property",
            "name": "VALUE_RE",
            "type": "{RegExp}",
            "static": 1,
            "readonly": "",
            "class": "CSSPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/CSSPlugin.js",
            "line": 113,
            "description": "By default, CSSPlugin uses only inline styles on the target element (ie. set via the style attribute, `style` property, or `cssText`)\nto determine which properties should be tweened via CSS, and what units to use.\n\nSetting `compute` to `true` causes CSSPlugin to use `getComputedStyle` for this purpose. This has the advantage of\nincluding all styles that effect the target element, however there are some important considerations for its use:<UL>\n\t<LI> `getComputedStyle` is computationally expensive, which could lead to performance issues if you are creating a large\n\tnumber of tweens at once.\n\t<LI> styles are normalized. For example, a width value specified as a `%` may be computed as `px`, which CSSPlugin will\n\tuse for the tween. Different browsers _may_ normalize values differently.\n\t<LI> there are a large number of computed styles, which increases the chance that a property will be identified as a style.\n\t<LI> does not work with IE8 or below.\n\t</UL>\n\t\n\tThe `compute` setting can be overridden on a per-tween basis by setting `tween.pluginData.CSS_compute`. For example,\n\tto enable computed styles for a new tween, you could use:\n\t\n\t\tcreatejs.Tween.get(el, {pluginData:{CSS_compute:true}}).to({top:20}, 1000);\n\t\n\tGiven the considerations for `compute`, it is recommended that you keep the default global setting of `false` and override it\n\tin specific cases via `pluginData`.",
            "itemtype": "property",
            "name": "compute",
            "type": "{Boolean}",
            "default": "false",
            "static": 1,
            "class": "CSSPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/CSSPlugin.js",
            "line": 143,
            "description": "Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.",
            "itemtype": "method",
            "name": "install",
            "static": 1,
            "class": "CSSPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/CSSPlugin.js",
            "line": 152,
            "description": "Called by TweenJS when a new property initializes on a tween.\nSee {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "static": 1,
            "class": "CSSPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/CSSPlugin.js",
            "line": 187,
            "description": "Called when a new step is added to a tween (ie. a new \"to\" action is added to a tween).\nSee {{#crossLink \"SamplePlugin/step\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "step",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "",
                    "type": "TweenStep"
                },
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "CSSPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/CSSPlugin.js",
            "line": 202,
            "description": "Called before a property is updated by the tween.\nSee {{#crossLink \"SamplePlugin/change\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "change",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "",
                    "type": "TweenStep"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "static": 1,
            "class": "CSSPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/ColorPlugin.js",
            "line": 52,
            "description": "READ-ONLY. RegExp pattern that detects CSS color values.",
            "itemtype": "property",
            "name": "COLOR_RE",
            "type": "{RegExp}",
            "static": 1,
            "readonly": "",
            "class": "ColorPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/ColorPlugin.js",
            "line": 61,
            "description": "READ-ONLY. RegExp pattern that matches rgb or hsl color strings, with groups for each value.",
            "itemtype": "property",
            "name": "RGB_HSL_RE",
            "type": "{RegExp}",
            "static": 1,
            "readonly": "",
            "class": "ColorPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/ColorPlugin.js",
            "line": 70,
            "description": "READ-ONLY. RegExp pattern that matches a 3 or 6 digit RGB string with a preceding #.",
            "itemtype": "property",
            "name": "HEX_RE",
            "type": "{RegExp}",
            "static": 1,
            "readonly": "",
            "class": "ColorPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/ColorPlugin.js",
            "line": 79,
            "itemtype": "property",
            "name": "_mode",
            "type": "{string}",
            "static": 1,
            "default": "rgb",
            "access": "protected",
            "tagname": "",
            "class": "ColorPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/ColorPlugin.js",
            "line": 88,
            "description": "READ-ONLY. A unique identifying string for this plugin. Used by TweenJS to ensure duplicate plugins are not installed on a tween.",
            "itemtype": "property",
            "name": "ID",
            "type": "{String}",
            "static": 1,
            "readonly": "",
            "class": "ColorPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/ColorPlugin.js",
            "line": 97,
            "description": "Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.",
            "itemtype": "method",
            "name": "install",
            "params": [
                {
                    "name": "mode",
                    "description": "A string equalling either \"rgb\" or \"hsl\" indicating what color mode should be used for calculations\nand output. You can input any color type regardless of the mode setting.",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "ColorPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/ColorPlugin.js",
            "line": 109,
            "description": "Called by TweenJS when a new property initializes on a tween.\nSee {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "static": 1,
            "class": "ColorPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/ColorPlugin.js",
            "line": 130,
            "description": "Called when a new step is added to a tween (ie. a new \"to\" action is added to a tween).\nSee {{#crossLink \"SamplePlugin/step\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "step",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "",
                    "type": "TweenStep"
                },
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "ColorPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/ColorPlugin.js",
            "line": 147,
            "description": "Called before a property is updated by the tween.\nSee {{#crossLink \"SamplePlugin/change\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "change",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "",
                    "type": "TweenStep"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "static": 1,
            "class": "ColorPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 79,
            "itemtype": "property",
            "name": "priority",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 86,
            "description": "READ-ONLY. A unique identifying string for this plugin. Used by TweenJS to ensure duplicate plugins are not installed on a tween.",
            "itemtype": "property",
            "name": "ID",
            "type": "{String}",
            "static": 1,
            "readonly": "",
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 96,
            "description": "Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.",
            "itemtype": "method",
            "name": "install",
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 106,
            "description": "Called by TweenJS when a new property initializes on a tween.\nSee {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 122,
            "description": "Called when a new step is added to a tween (ie. a new \"to\" action is added to a tween).\nSee {{#crossLink \"SamplePlugin/step\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "step",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "",
                    "type": "TweenStep"
                },
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 179,
            "description": "Called before a property is updated by the tween.\nSee {{#crossLink \"SamplePlugin/change\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "change",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "",
                    "type": "TweenStep"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 214,
            "description": "Provide potentially useful debugging information, like running the error detection system, and rendering the path\ndefined in the guide data.\n\nNOTE: you will need to transform your context 2D to the local space of the guide if you wish to line it up.",
            "params": [
                {
                    "name": "guideData",
                    "description": "All the information describing the guide to be followed.",
                    "type": "Object"
                },
                {
                    "name": "ctx",
                    "description": "The context to draw the object into.",
                    "type": "DrawingContext2D",
                    "optional": true,
                    "optdefault": "undefined"
                },
                {
                    "name": "higlight",
                    "description": "Array of ratio positions to highlight",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "undefined"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined|String"
            },
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 302,
            "description": "Calculate and store optimization data about the desired path to improve performance and accuracy of positions.",
            "params": [
                {
                    "name": "source",
                    "description": "The guide data provided to the tween call",
                    "type": "Object"
                },
                {
                    "name": "storage",
                    "description": "the guide data used by the step calls and plugin to do the job, will be overwritten",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Can return an error if unable to generate the data.",
                "type": "Undefined|String"
            },
            "access": "private",
            "tagname": "",
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 388,
            "description": "Convert a percentage along the line into, a local line (start, control, end) t-value for calculation.",
            "params": [
                {
                    "name": "ratio",
                    "description": "The (euclidean distance) percentage into the whole curve.",
                    "type": "Number"
                },
                {
                    "name": "guideData",
                    "description": "All the information describing the guide to be followed.",
                    "type": "Object"
                },
                {
                    "name": "output",
                    "description": "Object to save output properties of x,y, and rotation onto.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The output object, useful for isolated calls.",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 451,
            "description": "For a given quadratic bezier t-value, what is the position and rotation. Save it onto the output object.",
            "params": [
                {
                    "name": "sx",
                    "description": "Start x.",
                    "type": "Number"
                },
                {
                    "name": "sy",
                    "description": "Start y.",
                    "type": "Number"
                },
                {
                    "name": "cx",
                    "description": "Control x.",
                    "type": "Number"
                },
                {
                    "name": "cy",
                    "description": "Control y.",
                    "type": "Number"
                },
                {
                    "name": "ex",
                    "description": "End x.",
                    "type": "Number"
                },
                {
                    "name": "ey",
                    "description": "End y.",
                    "type": "Number"
                },
                {
                    "name": "t",
                    "description": "T value (parametric distance into curve).",
                    "type": "Number"
                },
                {
                    "name": "orient",
                    "description": "Save rotation data.",
                    "type": "Boolean"
                },
                {
                    "name": "output",
                    "description": "Object to save output properties of x,y, and rotation onto.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/MotionGuidePlugin.js",
            "line": 481,
            "description": "Perform a check to validate path information so plugin can avoid later error checking.",
            "params": [
                {
                    "name": "guideData",
                    "description": "All the information describing the guide to be followed.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The problem found, or undefined if no problems.",
                "type": "Undefined|String"
            },
            "access": "private",
            "tagname": "",
            "class": "MotionGuidePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RelativePlugin.js",
            "line": 58,
            "description": "READ-ONLY. A unique identifying string for this plugin. Used by TweenJS to ensure duplicate plugins are not installed on a tween.",
            "itemtype": "property",
            "name": "ID",
            "type": "{String}",
            "static": 1,
            "readonly": "",
            "class": "RelativePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RelativePlugin.js",
            "line": 67,
            "description": "Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.",
            "itemtype": "method",
            "name": "install",
            "static": 1,
            "class": "RelativePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RelativePlugin.js",
            "line": 76,
            "description": "Called by TweenJS when a new property initializes on a tween.\nSee {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "static": 1,
            "class": "RelativePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RelativePlugin.js",
            "line": 90,
            "description": "Called when a new step is added to a tween (ie. a new \"to\" action is added to a tween).\nSee {{#crossLink \"SamplePlugin/step\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "step",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "",
                    "type": "TweenStep"
                },
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "RelativePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RelativePlugin.js",
            "line": 110,
            "description": "Called before a property is updated by the tween.\nSee {{#crossLink \"SamplePlugin/change\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "change",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "",
                    "type": "TweenStep"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "static": 1,
            "class": "RelativePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RotationPlugin.js",
            "line": 64,
            "itemtype": "property",
            "name": "_props",
            "type": "{Object}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "RotationPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RotationPlugin.js",
            "line": 72,
            "description": "READ-ONLY. A unique identifying string for this plugin. Used by TweenJS to ensure duplicate plugins are not installed on a tween.",
            "itemtype": "property",
            "name": "ID",
            "type": "{String}",
            "static": 1,
            "readonly": "",
            "class": "RotationPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RotationPlugin.js",
            "line": 81,
            "description": "Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.",
            "itemtype": "method",
            "name": "install",
            "params": [
                {
                    "name": "props",
                    "description": "An object defining the properties this plugin acts on. For example, passing `{angle:true}`\nwill cause the plugin to only act on the `angle` property. By default the properties are `rotation`\n`rotationX`, `rotationY`, and `rotationZ`.",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "RotationPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RotationPlugin.js",
            "line": 94,
            "description": "Called by TweenJS when a new property initializes on a tween.\nSee {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "static": 1,
            "class": "RotationPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RotationPlugin.js",
            "line": 112,
            "description": "Called when a new step is added to a tween (ie. a new \"to\" action is added to a tween).\nSee {{#crossLink \"SamplePlugin/step\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "step",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "",
                    "type": "TweenStep"
                },
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "RotationPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/RotationPlugin.js",
            "line": 144,
            "description": "Called before a property is updated by the tween.\nSee {{#crossLink \"SamplePlugin/change\"}}{{/crossLink}} for more info.",
            "itemtype": "method",
            "name": "change",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "",
                    "type": "TweenStep"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "static": 1,
            "class": "RotationPlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/SamplePlugin.js",
            "line": 58,
            "description": "Used by TweenJS to determine when to call this plugin relative to others.\nPlugins with higher priority read first, and write last.\n\nFor example, if plugin A has `priority=0`, and plugin B has `priority=9` then B's `init` and `step` methods would\n be called before A's, but B's `change` method would be called *after* A's.",
            "itemtype": "property",
            "name": "priority",
            "type": "{Number}",
            "default": "0",
            "static": 1,
            "class": "SamplePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/SamplePlugin.js",
            "line": 71,
            "description": "READ-ONLY. A unique identifying string for this plugin. Used by TweenJS to ensure duplicate plugins are not installed on a tween.",
            "itemtype": "property",
            "name": "ID",
            "type": "{String}",
            "static": 1,
            "readonly": "",
            "class": "SamplePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/SamplePlugin.js",
            "line": 83,
            "description": "Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.",
            "itemtype": "method",
            "name": "install",
            "static": 1,
            "class": "SamplePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/SamplePlugin.js",
            "line": 93,
            "description": "Called by TweenJS when a new property initializes on a tween. Generally, the call\nto `Plugin.init` will be immediately followed by a call to `Plugin.step`.\n\nFor example:\n\n\tfoo.x = 0;\n\tfoo.y = 100;\n\tTween.get(foo)\n\t\t.to({x:10}) // init called with prop = \"x\", value = 0\n\t\t.to({x:20}) // init is NOT called, since x was already inited\n\t\t.to({y:200}) // init called with prop = \"y\", value = 100",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "tween",
                    "description": "The related tween instance.",
                    "type": "Tween"
                },
                {
                    "name": "prop",
                    "description": "The name of the property that is being initialized.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "If another plugin has modified the starting value, it will be passed in. Otherwise value will be undefined.",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "The modified starting tween value for the property. In most cases, you would simply wouldn't return anything, \nbut some plugins may need to modify the starting value. You can also return `Tween.IGNORE` to prevent this prop\nfrom being added to the tween at all.",
                "type": "Any"
            },
            "static": 1,
            "class": "SamplePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/SamplePlugin.js",
            "line": 157,
            "description": "Called when a new step is added to a tween (ie. a new \"to\" action is added to a tween).\n\nFor example:\n\tTween.get(foo)\n\t\t.to({x:10}) // step called\n\t\t.wait(100) // step is NOT called\n\t\t.to({x:20, y:200}) // step called",
            "itemtype": "method",
            "name": "step",
            "params": [
                {
                    "name": "tween",
                    "description": "The related tween instance.",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "The related tween step. This class is currently undocumented. See the bottom of Tween.js for info.",
                    "type": "TweenStep"
                },
                {
                    "name": "props",
                    "description": "The props object that was passed to `to()`.",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "SamplePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/plugins/SamplePlugin.js",
            "line": 203,
            "description": "Called before a property is updated by the tween.",
            "itemtype": "method",
            "name": "change",
            "params": [
                {
                    "name": "tween",
                    "description": "The related tween instance.",
                    "type": "Tween"
                },
                {
                    "name": "step",
                    "description": "The related tween step. This class is currently undocumented. See the bottom of Tween.js for info.",
                    "type": "TweenStep"
                },
                {
                    "name": "prop",
                    "description": "The name of the property being tweened.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The current tweened value of the property, as calculated by TweenJS. Previous plugins may have modified this value.",
                    "type": "Any"
                },
                {
                    "name": "ratio",
                    "description": "A value indicating the eased progress through the current step. This number is generally between 0 and 1,\nthough some eases will generate values outside this range.",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "Indicates that the tween has reached the end and is about to deregister itself.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Return the value that should be assigned to the target property.",
                "type": "Any"
            },
            "static": 1,
            "class": "SamplePlugin",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 62,
            "description": "Causes this tween to continue playing when a global pause is active. For example, if TweenJS is using {{#crossLink \"Ticker\"}}{{/crossLink}},\nthen setting this to false (the default) will cause this tween to be paused when `Ticker.paused` is set to\n`true`. See the {{#crossLink \"Tween/tick\"}}{{/crossLink}} method for more info. Can be set via the `props`\nparameter.",
            "itemtype": "property",
            "name": "ignoreGlobalPause",
            "type": "Boolean",
            "default": "false",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 73,
            "description": "Indicates the number of times to loop. If set to -1, the tween will loop continuously.\n\nNote that a tween must loop at _least_ once to see it play in both directions when `{{#crossLink \"AbstractTween/bounce:property\"}}{{/crossLink}}`\nis set to `true`.",
            "itemtype": "property",
            "name": "loop",
            "type": "{Number}",
            "default": "0",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 84,
            "description": "Uses ticks for all durations instead of milliseconds. This also changes the behaviour of some actions (such as `call`).\nChanging this value on a running tween could have unexpected results.",
            "itemtype": "property",
            "name": "useTicks",
            "type": "{Boolean}",
            "default": "false",
            "readonly": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 94,
            "description": "Causes the tween to play in reverse.",
            "itemtype": "property",
            "name": "reversed",
            "type": "{Boolean}",
            "default": "false",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 102,
            "description": "Causes the tween to reverse direction at the end of each loop. Each single-direction play-through of the\ntween counts as a single bounce. For example, to play a tween once forward, and once back, set the\n`{{#crossLink \"AbstractTween/loop:property\"}}{{/crossLink}}` to `1`.",
            "itemtype": "property",
            "name": "bounce",
            "type": "{Boolean}",
            "default": "false",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 112,
            "description": "Changes the rate at which the tween advances. For example, a `timeScale` value of `2` will double the\nplayback speed, a value of `0.5` would halve it.",
            "itemtype": "property",
            "name": "timeScale",
            "type": "{Number}",
            "default": "1",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 121,
            "description": "Indicates the duration of this tween in milliseconds (or ticks if `useTicks` is true), irrespective of `loops`.\nThis value is automatically updated as you modify the tween. Changing it directly could result in unexpected\nbehaviour.",
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "default": "0",
            "readonly": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 132,
            "description": "The current normalized position of the tween. This will always be a value between 0 and `duration`.\nChanging this property directly will have unexpected results, use {{#crossLink \"Tween/setPosition\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "position",
            "type": "{Object}",
            "default": "0",
            "readonly": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 142,
            "description": "The raw tween position. This value will be between `0` and `loops * duration` while the tween is active, or -1 before it activates.",
            "itemtype": "property",
            "name": "rawPosition",
            "type": "{Number}",
            "default": "-1",
            "readonly": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 153,
            "itemtype": "property",
            "name": "_paused",
            "type": "{Boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 161,
            "itemtype": "property",
            "name": "_next",
            "type": "{Tween}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 169,
            "itemtype": "property",
            "name": "_prev",
            "type": "{Tween}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 177,
            "itemtype": "property",
            "name": "_parent",
            "type": "{Object}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 185,
            "itemtype": "property",
            "name": "_labels",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 192,
            "itemtype": "property",
            "name": "_labelList",
            "type": "Array[Object]",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 216,
            "description": "Dispatched whenever the tween's position changes. It occurs after all tweened properties are updated and actions\nare executed.",
            "itemtype": "event",
            "name": "change",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 222,
            "description": "Dispatched when the tween reaches its end and has paused itself. This does not fire until all loops are complete;\ntweens that loop continuously will never fire a complete event.",
            "itemtype": "event",
            "name": "complete",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 230,
            "description": "Use the {{#crossLink \"AbstractTween/paused:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "_setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "Indicates whether the tween should be paused (`true`) or played (`false`).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls)",
                "type": "AbstractTween"
            },
            "access": "protected",
            "tagname": "",
            "chainable": 1,
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 244,
            "description": "Use the {{#crossLink \"AbstractTween/paused:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "_getPaused",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 254,
            "description": "Use the {{#crossLink \"AbstractTween/currentLabel:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "_getCurrentLabel",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "The name of the current label or null if there is no label",
                "type": "String"
            },
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 268,
            "description": "Pauses or unpauses the tween. A paused tween is removed from the global registry and is eligible for garbage\ncollection if no other references to it exist.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "readonly": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 276,
            "description": "Returns the name of the label on or immediately before the current position. For example, given a tween with\ntwo labels, \"first\" on frame index 4, and \"second\" on frame 8, `currentLabel` would return:\n<UL>\n\t\t<LI>null if the current position is 2.</LI>\n\t\t<LI>\"first\" if the current position is 4.</LI>\n\t\t<LI>\"first\" if the current position is 7.</LI>\n\t\t<LI>\"second\" if the current position is 15.</LI>\n</UL>",
            "itemtype": "property",
            "name": "currentLabel",
            "type": "String",
            "readonly": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 298,
            "description": "Advances the tween by a specified amount.",
            "itemtype": "method",
            "name": "advance",
            "params": [
                {
                    "name": "delta",
                    "description": "The amount to advance in milliseconds (or ticks if useTicks is true). Negative values are supported.",
                    "type": "Number"
                },
                {
                    "name": "ignoreActions",
                    "description": "If true, actions will not be executed due to this change in position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 308,
            "description": "Advances the tween to a specified position.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "rawPosition",
                    "description": "The raw position to seek to in milliseconds (or ticks if useTicks is true).",
                    "type": "Number"
                },
                {
                    "name": "ignoreActions",
                    "description": "If true, do not run any actions that would be triggered by this operation.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "jump",
                    "description": "If true, only actions at the new position will be run. If false, actions between the old and new position are run.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "Primarily for use with MovieClip, this callback is called after properties are updated, but before actions are run.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 354,
            "description": "Calculates a normalized position based on a raw position. For example, given a tween with a duration of 3000ms set to loop:\n\tconsole.log(myTween.calculatePosition(3700); // 700",
            "itemtype": "method",
            "name": "calculatePosition",
            "params": [
                {
                    "name": "rawPosition",
                    "description": "A raw position.",
                    "type": "Number"
                }
            ],
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 373,
            "description": "Returns a list of the labels defined on this tween sorted by position.",
            "itemtype": "method",
            "name": "getLabels",
            "return": {
                "description": "A sorted array of objects with label and position properties.",
                "type": "Array[Object]"
            },
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 392,
            "description": "Defines labels for use with gotoAndPlay/Stop. Overwrites any previously set labels.",
            "itemtype": "method",
            "name": "setLabels",
            "params": [
                {
                    "name": "labels",
                    "description": "An object defining labels for using {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}\nin the form `{myLabelName:time}` where time is in milliseconds (or ticks if `useTicks` is `true`).",
                    "type": "Object"
                }
            ],
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 403,
            "description": "Adds a label that can be used with {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "addLabel",
            "params": [
                {
                    "name": "label",
                    "description": "The label name.",
                    "type": "String"
                },
                {
                    "name": "position",
                    "description": "The position this label represents.",
                    "type": "Number"
                }
            ],
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 419,
            "description": "Unpauses this timeline and jumps to the specified position or label.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The position in milliseconds (or ticks if `useTicks` is `true`)\nor label to jump to.",
                    "type": "String|Number"
                }
            ],
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 430,
            "description": "Pauses this timeline and jumps to the specified position or label.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The position in milliseconds (or ticks if `useTicks` is `true`) or label\nto jump to.",
                    "type": "String|Number"
                }
            ],
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 441,
            "description": "If a numeric position is passed, it is returned unchanged. If a string is passed, the position of the\ncorresponding frame label will be returned, or `null` if a matching label is not defined.",
            "itemtype": "method",
            "name": "resolve",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "A numeric position value or label string.",
                    "type": "String|Number"
                }
            ],
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 454,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 463,
            "itemtype": "method",
            "name": "clone",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 473,
            "description": "Shared logic that executes at the end of the subclass constructor.",
            "itemtype": "method",
            "name": "_init",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 483,
            "itemtype": "method",
            "name": "_updatePosition",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 491,
            "itemtype": "method",
            "name": "_goto",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/AbstractTween.js",
            "line": 500,
            "itemtype": "method",
            "name": "_runActions",
            "access": "protected",
            "tagname": "",
            "class": "AbstractTween",
            "module": "EaselJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 64,
            "itemtype": "method",
            "name": "linear",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 72,
            "description": "Identical to linear.",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 81,
            "description": "Mimics the simple -100 to 100 easing in Adobe Flash/Animate.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "amount",
                    "description": "A value from -1 (ease in) to 1 (ease out) indicating the strength and direction of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 98,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowIn",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease).",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 111,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowOut",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease).",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 124,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowInOut",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease).",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 138,
            "itemtype": "method",
            "name": "quadIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 145,
            "itemtype": "method",
            "name": "quadOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 152,
            "itemtype": "method",
            "name": "quadInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 160,
            "itemtype": "method",
            "name": "cubicIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 167,
            "itemtype": "method",
            "name": "cubicOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 174,
            "itemtype": "method",
            "name": "cubicInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 182,
            "itemtype": "method",
            "name": "quartIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 189,
            "itemtype": "method",
            "name": "quartOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 196,
            "itemtype": "method",
            "name": "quartInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 204,
            "itemtype": "method",
            "name": "quintIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 211,
            "itemtype": "method",
            "name": "quintOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 218,
            "itemtype": "method",
            "name": "quintInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 226,
            "itemtype": "method",
            "name": "sineIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 236,
            "itemtype": "method",
            "name": "sineOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 246,
            "itemtype": "method",
            "name": "sineInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 256,
            "description": "Configurable \"back in\" ease.",
            "itemtype": "method",
            "name": "getBackIn",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 268,
            "itemtype": "method",
            "name": "backIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 276,
            "description": "Configurable \"back out\" ease.",
            "itemtype": "method",
            "name": "getBackOut",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 288,
            "itemtype": "method",
            "name": "backOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 296,
            "description": "Configurable \"back in out\" ease.",
            "itemtype": "method",
            "name": "getBackInOut",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 310,
            "itemtype": "method",
            "name": "backInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 318,
            "itemtype": "method",
            "name": "circIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 328,
            "itemtype": "method",
            "name": "circOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 338,
            "itemtype": "method",
            "name": "circInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 349,
            "itemtype": "method",
            "name": "bounceIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 359,
            "itemtype": "method",
            "name": "bounceOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 377,
            "itemtype": "method",
            "name": "bounceInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 388,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticIn",
            "params": [
                {
                    "name": "amplitude",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 404,
            "itemtype": "method",
            "name": "elasticIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 412,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticOut",
            "params": [
                {
                    "name": "amplitude",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 428,
            "itemtype": "method",
            "name": "elasticOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 436,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticInOut",
            "params": [
                {
                    "name": "amplitude",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Ease.js",
            "line": 452,
            "itemtype": "method",
            "name": "elasticInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ease",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Timeline.js",
            "line": 82,
            "description": "The array of tweens in the timeline. It is *strongly* recommended that you use\n{{#crossLink \"Tween/addTween\"}}{{/crossLink}} and {{#crossLink \"Tween/removeTween\"}}{{/crossLink}},\nrather than accessing this directly, but it is included for advanced uses.",
            "itemtype": "property",
            "name": "tweens",
            "type": "Array",
            "class": "Timeline",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Timeline.js",
            "line": 105,
            "description": "Adds one or more tweens (or timelines) to this timeline. The tweens will be paused (to remove them from the\nnormal ticking system) and managed by this timeline. Adding a tween to multiple timelines will result in\nunexpected behaviour.",
            "itemtype": "method",
            "name": "addTween",
            "params": [
                {
                    "name": "...tween",
                    "description": "The tween(s) to add. Accepts multiple arguments.",
                    "type": "Tween"
                }
            ],
            "return": {
                "description": "The first tween that was passed in.",
                "type": "Tween"
            },
            "class": "Timeline",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Timeline.js",
            "line": 133,
            "description": "Removes one or more tweens from this timeline.",
            "itemtype": "method",
            "name": "removeTween",
            "params": [
                {
                    "name": "...tween",
                    "description": "The tween(s) to remove. Accepts multiple arguments.",
                    "type": "Tween"
                }
            ],
            "return": {
                "description": "Boolean Returns `true` if all of the tweens were successfully removed."
            },
            "class": "Timeline",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Timeline.js",
            "line": 160,
            "description": "Recalculates the duration of the timeline. The duration is automatically updated when tweens are added or removed,\nbut this method is useful if you modify a tween after it was added to the timeline.",
            "itemtype": "method",
            "name": "updateDuration",
            "class": "Timeline",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Timeline.js",
            "line": 175,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Timeline",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Timeline.js",
            "line": 184,
            "itemtype": "method",
            "name": "clone",
            "access": "protected",
            "tagname": "",
            "class": "Timeline",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 126,
            "description": "Allows you to specify data that will be used by installed plugins. Each plugin uses this differently, but in general\nyou specify data by assigning it to a property of `pluginData` with the same name as the plugin.\nNote that in many cases, this data is used as soon as the plugin initializes itself for the tween.\nAs such, this data should be set before the first `to` call in most cases.",
            "example": [
                "\n\tmyTween.pluginData.SmartRotation = data;\n\nMost plugins also support a property to disable them for a specific tween. This is typically the plugin name followed by \"_disabled\".",
                "\n\tmyTween.pluginData.SmartRotation_disabled = true;\n\nSome plugins also store working data in this object, usually in a property named `_PluginClassName`.\nSee the documentation for individual plugins for more details."
            ],
            "itemtype": "property",
            "name": "pluginData",
            "type": "{Object}",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 145,
            "description": "The target of this tween. This is the object on which the tweened properties will be changed.",
            "itemtype": "property",
            "name": "target",
            "type": "{Object}",
            "readonly": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 153,
            "description": "Indicates the tween's current position is within a passive wait.",
            "itemtype": "property",
            "name": "passive",
            "type": "{Boolean}",
            "default": "false",
            "readonly": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 165,
            "itemtype": "property",
            "name": "_stepHead",
            "type": "{TweenStep}",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 172,
            "itemtype": "property",
            "name": "_stepTail",
            "type": "{TweenStep}",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 179,
            "description": "The position within the current step. Used by MovieClip.",
            "itemtype": "property",
            "name": "_stepPosition",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 188,
            "itemtype": "property",
            "name": "_actionHead",
            "type": "{TweenAction}",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 195,
            "itemtype": "property",
            "name": "_actionTail",
            "type": "{TweenAction}",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 202,
            "description": "Plugins added to this tween instance.",
            "itemtype": "property",
            "name": "_plugins",
            "type": "Array[Object]",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 211,
            "description": "Hash for quickly looking up added plugins. Null until a plugin is added.",
            "itemtype": "property",
            "name": "_plugins",
            "type": "Object",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 220,
            "description": "Used by plugins to inject new properties.",
            "itemtype": "property",
            "name": "_injected",
            "type": "{Object}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 242,
            "description": "Constant returned by plugins to tell the tween not to use default assignment.",
            "itemtype": "property",
            "name": "IGNORE",
            "type": "Object",
            "static": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 250,
            "itemtype": "property",
            "name": "_listeners",
            "type": "Array[Tween]",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 258,
            "itemtype": "property",
            "name": "_plugins",
            "type": "Object",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 266,
            "itemtype": "property",
            "name": "_tweenHead",
            "type": "Tween",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 274,
            "itemtype": "property",
            "name": "_tweenTail",
            "type": "Tween",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 284,
            "description": "Returns a new tween instance. This is functionally identical to using `new Tween(...)`, but may look cleaner\nwith the chained syntax of TweenJS.\n<h4>Example</h4>\n\n\tvar tween = createjs.Tween.get(target).to({x:100}, 500);\n\t// equivalent to:\n\tvar tween = new createjs.Tween(target).to({x:100}, 500);",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "target",
                    "description": "The target object that will have its properties tweened.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\nSupported props are listed below. These props are set on the corresponding instance properties except where\nspecified.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "useTicks",
                            "description": "See the {{#crossLink \"AbstractTween/useTicks:property\"}}{{/crossLink}} property for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "ignoreGlobalPause",
                            "description": "See the {{#crossLink \"AbstractTween/ignoreGlobalPause:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "loop",
                            "description": "See the {{#crossLink \"AbstractTween/loop:property\"}}{{/crossLink}} for more information.",
                            "type": "Number|boolean",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "reversed",
                            "description": "See the {{#crossLink \"AbstractTween/reversed:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "bounce",
                            "description": "See the {{#crossLink \"AbstractTween/bounce:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "timeScale",
                            "description": "See the {{#crossLink \"AbstractTween/timeScale:property\"}}{{/crossLink}} for more information.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "pluginData",
                            "description": "See the {{#crossLink \"Tween/pluginData:property\"}}{{/crossLink}} for more information.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "paused",
                            "description": "See the {{#crossLink \"AbstractTween/paused:property\"}}{{/crossLink}} for more information.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "position",
                            "description": "The initial position for this tween. See {{#crossLink \"AbstractTween/position:property\"}}{{/crossLink}}",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "onChange",
                            "description": "Adds the specified function as a listener to the {{#crossLink \"AbstractTween/change:event\"}}{{/crossLink}} event",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onComplete",
                            "description": "Adds the specified function as a listener to the {{#crossLink \"AbstractTween/complete:event\"}}{{/crossLink}} event",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "override",
                            "description": "Removes all existing tweens for the target when set to `true`.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "A reference to the created tween.",
                "type": "Tween"
            },
            "static": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 317,
            "description": "Advances all tweens. This typically uses the {{#crossLink \"Ticker\"}}{{/crossLink}} class, but you can call it\nmanually if you prefer to use your own \"heartbeat\" implementation.",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "delta",
                    "description": "The change in time in milliseconds since the last tick. Required unless all tweens have\n`useTicks` set to true.",
                    "type": "Number"
                },
                {
                    "name": "paused",
                    "description": "Indicates whether a global pause is in effect. Tweens with {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}}\nwill ignore this, but all others will pause if this is `true`.",
                    "type": "Boolean"
                }
            ],
            "static": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 337,
            "description": "Handle events that result from Tween being used as an event handler. This is included to allow Tween to handle\n{{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} events from the createjs {{#crossLink \"Ticker\"}}{{/crossLink}}.\nNo other events are handled in Tween.",
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "event",
                    "description": "An event object passed in by the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}. Will\nusually be of type \"tick\".",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "since": "0.4.2",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 354,
            "description": "Removes all existing tweens for a target. This is called automatically by new tweens if the `override`\nproperty is `true`.",
            "itemtype": "method",
            "name": "removeTweens",
            "params": [
                {
                    "name": "target",
                    "description": "The target object to remove existing tweens from.",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 372,
            "description": "Stop and remove all existing tweens.",
            "itemtype": "method",
            "name": "removeAllTweens",
            "static": 1,
            "since": "0.4.1",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 390,
            "description": "Indicates whether there are any active tweens on the target object (if specified) or in general.",
            "itemtype": "method",
            "name": "hasActiveTweens",
            "params": [
                {
                    "name": "target",
                    "description": "The target to check for active tweens. If not specified, the return value will indicate\nif there are any active tweens on any target.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Indicates if there are active tweens.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 403,
            "description": "Installs a plugin, which can modify how certain properties are handled when tweened. See the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}\nfor an example of how to write TweenJS plugins. Plugins should generally be installed via their own `install` method, in order to provide\nthe plugin with an opportunity to configure itself.",
            "itemtype": "method",
            "name": "_installPlugin",
            "params": [
                {
                    "name": "plugin",
                    "description": "The plugin to install",
                    "type": "Object"
                }
            ],
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 420,
            "description": "Registers or unregisters a tween with the ticking system.",
            "itemtype": "method",
            "name": "_register",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween instance to register or unregister.",
                    "type": "Tween"
                },
                {
                    "name": "paused",
                    "description": "If `false`, the tween is registered. If `true` the tween is unregistered.",
                    "type": "Boolean"
                }
            ],
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 458,
            "description": "Adds a wait (essentially an empty tween).\n<h4>Example</h4>\n\n\t//This tween will wait 1s before alpha is faded to 0.\n\tcreatejs.Tween.get(target).wait(1000).to({alpha:0}, 1000);",
            "itemtype": "method",
            "name": "wait",
            "params": [
                {
                    "name": "duration",
                    "description": "The duration of the wait in milliseconds (or in ticks if `useTicks` is true).",
                    "type": "Number"
                },
                {
                    "name": "passive",
                    "description": "Tween properties will not be updated during a passive wait. This\nis mostly useful for use with {{#crossLink \"Timeline\"}}{{/crossLink}} instances that contain multiple tweens\naffecting the same target at different times.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "chainable": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 478,
            "description": "Adds a tween from the current values to the specified properties. Set duration to 0 to jump to these value.\nNumeric properties will be tweened from their current value in the tween to the target value. Non-numeric\nproperties will be set at the end of the specified duration.\n<h4>Example</h4>\n\n\tcreatejs.Tween.get(target).to({alpha:0, visible:false}, 1000);",
            "itemtype": "method",
            "name": "to",
            "params": [
                {
                    "name": "props",
                    "description": "An object specifying property target values for this tween (Ex. `{x:300}` would tween the x\nproperty of the target to 300).",
                    "type": "Object"
                },
                {
                    "name": "duration",
                    "description": "The duration of the tween in milliseconds (or in ticks if `useTicks` is true).",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "ease",
                    "description": "The easing function to use for this tween. See the {{#crossLink \"Ease\"}}{{/crossLink}}\nclass for a list of built-in ease functions.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "\"linear\""
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "chainable": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 502,
            "description": "Adds a label that can be used with {{#crossLink \"Tween/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Tween/gotoAndStop\"}}{{/crossLink}}\nat the current point in the tween. For example:\n\n\tvar tween = createjs.Tween.get(foo)\n\t\t\t\t\t.to({x:100}, 1000)\n\t\t\t\t\t.label(\"myLabel\")\n\t\t\t\t\t.to({x:200}, 1000);\n// ...\ntween.gotoAndPlay(\"myLabel\"); // would play from 1000ms in.",
            "itemtype": "method",
            "name": "addLabel",
            "params": [
                {
                    "name": "label",
                    "description": "The label name.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "chainable": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 523,
            "description": "Adds an action to call the specified function.\n<h4>Example</h4>\n\n\t//would call myFunction() after 1 second.\n\tcreatejs.Tween.get().wait(1000).call(myFunction);",
            "itemtype": "method",
            "name": "call",
            "params": [
                {
                    "name": "callback",
                    "description": "The function to call.",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": "The parameters to call the function with. If this is omitted, then the function\nwill be called with a single param pointing to this tween.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "scope",
                    "description": "The scope to call the function in. If omitted, it will be called in the target's scope.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "chainable": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 542,
            "description": "Adds an action to set the specified props on the specified target. If `target` is null, it will use this tween's\ntarget. Note that for properties on the target object, you should consider using a zero duration {{#crossLink \"Tween/to\"}}{{/crossLink}}\noperation instead so the values are registered as tweened props.\n<h4>Example</h4>\n\n\tmyTween.wait(1000).set({visible:false}, foo);",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "The properties to set (ex. `{visible:false}`).",
                    "type": "Object"
                },
                {
                    "name": "target",
                    "description": "The target to set the properties on. If omitted, they will be set on the tween's target.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "chainable": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 560,
            "description": "Adds an action to play (unpause) the specified tween. This enables you to sequence multiple tweens.\n<h4>Example</h4>\n\n\tmyTween.to({x:100}, 500).play(otherTween);",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween to play. Defaults to this tween.",
                    "type": "Tween",
                    "optional": true
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "chainable": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 575,
            "description": "Adds an action to pause the specified tween.\n\n\tmyTween.pause(otherTween).to({alpha:1}, 1000).play(otherTween);\n\nNote that this executes at the end of a tween update, so the tween may advance beyond the time the pause\naction was inserted at. For example:\n\nmyTween.to({foo:0}, 1000).pause().to({foo:1}, 1000);\n\nAt 60fps the tween will advance by ~16ms per tick, if the tween above was at 999ms prior to the current tick, it\nwill advance to 1015ms (15ms into the second \"step\") and then pause.",
            "itemtype": "method",
            "name": "pause",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween to pause. Defaults to this tween.",
                    "type": "Tween",
                    "optional": true
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls)",
                "type": "Tween"
            },
            "chainable": 1,
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 603,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 612,
            "itemtype": "method",
            "name": "clone",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 622,
            "description": "Adds a plugin to this tween.",
            "itemtype": "method",
            "name": "_addPlugin",
            "params": [
                {
                    "name": "plugin",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 656,
            "itemtype": "method",
            "name": "_updateTargetProps",
            "params": [
                {
                    "name": "step",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "Indicates to plugins that the full tween has ended.",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 695,
            "itemtype": "method",
            "name": "_runActionsRange",
            "params": [
                {
                    "name": "startPos",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "endPos",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "includeStart",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 718,
            "itemtype": "method",
            "name": "_appendProps",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 779,
            "description": "Used by plugins to inject properties onto the current step. Called from within `Plugin.step` calls.\nFor example, a plugin dealing with color, could read a hex color, and inject red, green, and blue props into the tween.\nSee the SamplePlugin for more info.",
            "itemtype": "method",
            "name": "_injectProp",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 793,
            "itemtype": "method",
            "name": "_addStep",
            "params": [
                {
                    "name": "duration",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "ease",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "passive",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 807,
            "itemtype": "method",
            "name": "_addAction",
            "params": [
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "funct",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Array"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 822,
            "itemtype": "method",
            "name": "_set",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/Tween.js",
            "line": 833,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/version.js",
            "line": 16,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "TweenJS",
            "module": "TweenJS"
        },
        {
            "file": "tweenjs/version.js",
            "line": 24,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "TweenJS",
            "module": "TweenJS"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " createjs/utils/Ticker.js:479"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " tweenjs/plugins/MotionGuidePlugin.js:214"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " tweenjs/plugins/MotionGuidePlugin.js:302"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " tweenjs/plugins/MotionGuidePlugin.js:388"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " tweenjs/plugins/MotionGuidePlugin.js:481"
        },
        {
            "message": "Missing item type\nProvide potentially useful debugging information, like running the error detection system, and rendering the path\ndefined in the guide data.\n\nNOTE: you will need to transform your context 2D to the local space of the guide if you wish to line it up.",
            "line": " tweenjs/plugins/MotionGuidePlugin.js:214"
        },
        {
            "message": "Missing item type\nCalculate and store optimization data about the desired path to improve performance and accuracy of positions.",
            "line": " tweenjs/plugins/MotionGuidePlugin.js:302"
        },
        {
            "message": "Missing item type\nConvert a percentage along the line into, a local line (start, control, end) t-value for calculation.",
            "line": " tweenjs/plugins/MotionGuidePlugin.js:388"
        },
        {
            "message": "Missing item type\nFor a given quadratic bezier t-value, what is the position and rotation. Save it onto the output object.",
            "line": " tweenjs/plugins/MotionGuidePlugin.js:451"
        },
        {
            "message": "Missing item type\nPerform a check to validate path information so plugin can avoid later error checking.",
            "line": " tweenjs/plugins/MotionGuidePlugin.js:481"
        }
    ]
}